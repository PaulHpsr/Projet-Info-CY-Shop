#include <math.h>
#include <stdio.h>
#include <string.h>
#include <time.h>
#include <stdlib.h> 
#include<dirent.h>
#include "ReadSpecificLine.h"

//Bibliothèques
char email[30];
int f;
//Structures
typedef struct {
int pid;
char pname[20];
int pprice;

}Bill;

typedef struct {
    char name[20];
    char prenom[30];
    int age;
    char password[100];
    char email[100];
    Bill bill;
}Client;

typedef struct{
int id;
char name[20];
int price;
int qty;
}Product;

//Logs Admin
char admin[30] = "admin@gmail.com";
char adminp[10] = "a";
//Déclaration des fonction (dans l'ordre)//
void signup();
void Crea_Client();
int valid();
int compte_existant();
int login();
//Variables De comptes
  // (Mettre des malloc ??)
char t_name[100], t_password1[100];
char t_password2[100], t_email[100];
char t_prenom[100];
int t_age;
//
int DefaultScreen();
int getID();
void manageProduct();
void addProduct();
void displayAllProduct();
int NbrProduct();
int updateProduct();
void GestionMode();
void displayAllUsers();
int modifUsers();
int modifMesInfos();
//A FAIRE !!!!!
void purchaseProduct();
void generateBill();
//Espaces
void EspaceClient();
void EspaceAdmin();
//Déclaration des variables globales
char fproduct[]={"product.txt"};


//Connexion/Création de compte 
void signup()
{
  system("clear");
int x;
//
  
    printf("\n\n\t=================Inscription à CY-SHOP=================\n\n");
  
    //Nom
    printf("\tEntrer votre NOM : ");
    scanf("%s", t_name);
  
      printf("\tEntrer votre PRENOM : ");
    scanf("%s", t_prenom);
    // Email
    printf("\tEntrer votre Email : ");
    scanf("%s", t_email);
  
    //MDP
    printf("\tMot de Passe : ");
    scanf("%s", t_password1);
  
    // MDP Confirm
    printf("\tConfirmez le Mot de Passe : ");
    scanf("%s", t_password2);
  
    // Age
    printf("\tEntrer votre AGE : ");
    scanf("%d", &t_age);
  
    x = valid();
    if (x == 1) {
  
      // Processus de crea de fiche client
        Crea_Client();
  
        // Se connecter
        login();
    }
}

//Création de la fiche client 
void Crea_Client()
{
  FILE *fc; //pointeur file du client
  Client client;
  int validate=0;

  
char *fname = malloc(sizeof(char)*200);
 strcpy(fname, t_email);
strcat(fname,".txt");
  
 
  if(compte_existant() == 1){  //Pas de doublons de client
    
fc=fopen(fname,"a");  //Creation du fichier Client + infos
strcpy(client.name,t_name);
strcpy(client.email,t_email);
strcpy(client.prenom,t_prenom);
client.age=t_age;
strcpy(client.password,t_password1);
fprintf(fc,"%s\n%s\n%d\n%s\n%s",client.name,client.prenom,client.age,client.password,client.email);
    //
  fclose(fc);
  printf("\nCompte bien créé\n\n");
  }
  free(fname);
 }

//Vérif des infos client bien conformes
int valid(){
  int i;
  int count;
  int nbr;
  int succes;
  //Nom
  for(i=0; t_name[i]!= '\0';i++){
    while(!((t_name[i] >= 'a' && t_name[i] <= 'z') || (t_name[i] >= 'A' && t_name[i] <= 'Z'))) {
            printf("\nVeuillez entrer un nom valide!\n");
      fflush(stdin);
      printf("Entrer votre prénom:\n");
      scanf("%s",t_name);
    }
  }
  //Prenom
    for(i=0; t_prenom[i]!= '\0';i++){
    while(!((t_prenom[i] >= 'a' && t_prenom[i] <= 'z') || (t_prenom[i] >= 'A' && t_prenom[i] <= 'Z'))) {
        printf("\nVeuillez entrer un prénom valide!\n");
      fflush(stdin);
      scanf("%s", t_prenom);

    }
  }
    count =0;
    //Email 
          for(i=0;t_email[i]!='\0';i++){
                  if (t_email[i] == '@' || t_email[i] == '.'){ 
                count++;
        }
    }
  while(count!=2){
    count=0;
    printf("\nEmail non valide!!\nVeuillez Saisir une adresse email valide:\n");
    scanf("%s",t_email);
        for(i=0;t_email[i]!='\0';i++){
                  if (t_email[i] == '@' || t_email[i] == '.'){ 
                count++;
        }
    }
  }
    //MDP et Age
      while (strcmp(t_password1, t_password2)) {
        printf("\nMot de Passe ne sont pas les même!\n\n");
        printf("\nVeuillez recommencer:\n");
        //MDP
    printf("\tMot de Passe : ");
    scanf("%s", t_password1);
  
    // MDP Confirm
    printf("\tConfirmer le Mot de Passe : ");
    scanf("%s", t_password2);
     }
    while (t_age == 0 && t_age < 0) {
    printf("\n\nVeuillez entrer un age valide!\n\n");
    // Age
    printf("\tEntrer votre Age : ");
    scanf("%d", &t_age);
          
      }
      succes =1;

  return succes;
}


//Vérif si client déjà inscrit != Doublons clients
int compte_existant(){
  char *fname = malloc(sizeof(char)*200);
 strcpy(fname, t_email);
strcat(fname,".txt");
  //Recherche dans le directory (fichiers du programme)
    DIR *d;
    struct dirent *dir;
    d = opendir(".");
    if (d)
    {
        while ((dir = readdir(d)) != NULL) //Tant qu'il reste des fichiers non vérif
        {
          if(!(strcmp(dir->d_name, fname))){ //Si d_name == email client -> déjà register
            printf("\nCompte existant, veuillez vous connecter\n\n");
            free(fname);
            return 0;
          }
        }
        closedir(d);
    }
  return 1; // Compte déjà existant
}

//Connexion des clients
int login(){
  system("clear");
  int a;
  int i;
  FILE *fc;
  int count=0;
   char email2[5]=".txt"; 
  char pasword[30];
  char pasword2[30];
    printf("\n\n\t=================Connexion à CY-SHOP=================\n\n");
    printf("\n\nLOGIN\n\n");
    printf("\t Entrez votre Email: ");
  
    // EMAIL
    scanf("%s", email);
        for(i=0;email[i]!='\0';i++){
                  if (email[i] == '@' || email[i] == '.'){ 
                count++;
        }
    }
   while(count!=2){
     count=0;
    printf("\nEmail non valide!!\nVeuillez Saisir une adresse email valide:\n");
    scanf("%s",email);
        for(i=0;email[i]!='\0';i++){
                  if (email[i] == '@' || email[i] == '.'){ 
                count++;
        }
    }
  }
    printf("\t Entrez votre Mot de Passe: ");
    //MDP
  scanf("%s", pasword2);
  if(!(strcmp(email, admin))){ //Chemin Admin 
      if(!(strcmp(pasword2, adminp))){
        a= 2;
        return a;
      }
    }
  strcat(email,email2);
  //Verif correspondance mdp/compte
  fc=fopen(email,"r");
  if(fc==NULL){
  printf("\nCompte inexistant, Veuillez vous créer un compte\n");
    a=3;
   return a;
    
  }
  //Vérif de la 4ème ligne du fichier client (MDP)
  strcpy(pasword, ReadLine(4, email));

  //Correspondance
  if(strcmp(pasword, pasword2)== 0){
    printf("\nVous êtes bien connecté\n");
    a = 1;
    return a;
  }
  else{
    printf("\nMauvais Mot de passe ou adresse email\nVeuillez vous créer un compte\n");
    a=3;
  }
return a;
}

//Mode Management

//Gene de ID produit
int getID(){
  FILE *fp;
  int value=0;
  fp=fopen("prodid.txt","r");
  if(fp==NULL){ //Création du fichier qui suit le id produit (nbr de produit total -> prochain ID produit)
    fp=fopen("prodid.txt","w");
    fprintf(fp,"%d",0);
    fclose(fp);
    fp=fopen("prodid.txt","r");
  }
  //Remplace la valeur par valeur+1 à chaque fois qu'un produit est ajouté à la liste
  fscanf(fp,"%d",&value);
  fclose(fp);
  fp=fopen("prodid.txt","w");
  fprintf(fp,"%d",value+1);
  fclose(fp);
  return value+1;
}

//Interface de Management
void manageProduct(){
  system("clear");
  int ch;
  int back=0;
  while(1){

    printf("\n\n\t=================Mode Management Produit=================\n\n");
    printf("1.Ajouter un Produit\n\n");
    printf("2.Afficher la liste Produit\n\n");
    printf("3.Modifier un produit\n\n");
    printf("0.Retour\n\n");
    printf("\n\n\t=======================================================\n\n");
    printf("\nEntrer votre choix:\n");
    scanf("%d",&ch);

    switch(ch){
      case 1: addProduct();
      break;
      case 2: displayAllProduct();
      break;
      case 3: updateProduct();
      break;
      case 0: 
        EspaceAdmin();
      break;
      default :
      printf("\nVeuillez renter un choix valide\n");
      break;
    }
  }
}

//Ajouter un Produit
void addProduct(){
  FILE *fp;
  Product t1;
  fp=fopen(fproduct,"a");

  t1.id=getID();
  printf("\nNom du Produit:");
  scanf("%s",t1.name);
  printf("\nPrix du Produit:");
  scanf("%d",&t1.price);
  printf("\nQuantité en stock:");
  scanf("%d",&t1.qty);

  fprintf(fp,"%d\n%s\n%d\n%d\n", t1.id,t1.name,t1.price,t1.qty);
  fclose(fp);
}

//Afficher les produits
void displayAllProduct(){
  system("clear");
  int MAX_LENGTH=30;
    FILE* fichier = fopen(fproduct, "r");
    
    if (fichier == NULL) {
        printf("\nErreur lors de l'ouverture du fichier.\n");
      printf("\nFichier manquant\n");
        return;
    }
    //Utiliser Malloc ??
    char id[MAX_LENGTH];
    char nom[MAX_LENGTH];
    char prix[MAX_LENGTH];
    char quantite[MAX_LENGTH];
    printf("\n\nID\tProduit\tPrix\tQté\n");
    while (fscanf(fichier, "%s", id) == 1) {
        fscanf(fichier, " %[^\n]", nom);
        fscanf(fichier, "%s", prix);
        fscanf(fichier, "%s", quantite);
        
        printf("%s\t%s\t%s\t\t%s\n", id, nom, prix, quantite);
    }
    
    fclose(fichier);
}

//Obtenir le nombre de produits totaux
int NbrProduct(){
int nprod;
Product produit;
FILE *fp;
fp =fopen("prodid.txt","r");
fscanf(fp, "%d", &nprod);
fclose(fp);
return nprod;
}

//Modifier une information du produit // Rajouter une fonction pour faciliter la modif (par rapport à l'id*(la ligne));
int updateProduct() {
int choix;
int id;
FILE *file=fopen(fproduct,"r"), *temp;

  char filename[FILENAME_SIZE];
  char temp_filename[FILENAME_SIZE];

  char buffer[MAX_LINE];
  char replace[MAX_LINE];
  int replace_line = 0;

if (file == NULL) {
        printf("\nErreur lors de l'ouverture du fichier.\n");
      printf("\nFichier manquant\n");
        return -1;
    }  

  strcpy(temp_filename, "temp__");
  strcat(temp_filename, fproduct);
printf("\nQuel produit voulez-vous modifier (ID):\n");
scanf("%d",&id);
  while(id==0 || id<0 || id>NbrProduct()){
    fflush(stdin);
    printf("\nMauvais code produit, veuillez réessayer\n");
    printf("\nQuel produit voulez-vous modifier (ID):\n");
    scanf("%d",&id);
  }
  fflush(stdin);
  printf("\nQue voulez vous changer:\n1.Nom du Produit\n2.Prix du Produit\n3.Quantité\n"); 
  scanf("%d",&choix);
      while(choix<1 || choix>3){
        fflush(stdin);
      printf("\nVeuillez faire un choix correcte\n");
      printf("\nQue voulez vous changer:\n1.Nom du Produit\n2.Prix du Produit\n3.Quantité\n"); 
      scanf("%d",&choix);
    }
  if(choix==1){
    replace_line=2*id;
  }else if(choix==2){
    replace_line=3*id;
  }else if(choix==3){
    replace_line=4*id;
  }
  else{
printf("\nErreur!\n");
    return -1;
  }
  

  fflush(stdin);
  printf("\nChangement:\n");
  scanf("%s", replace);

  file = fopen(fproduct, "r");
  temp = fopen(temp_filename, "w");

  bool keep_reading = true;
  int current_line = 1;
  do {
    fgets(buffer, MAX_LINE, file);
    if (feof(file)) {
      keep_reading = false;
    } else if (current_line == replace_line) {
      fputs(replace, temp);
      fputc('\n', temp); // Ajout du caractère de fin de ligne
    } else {
      fputs(buffer, temp);
    }
    current_line++;
  } while (keep_reading);

  fclose(file);
  fclose(temp);
  remove(fproduct);
  rename(temp_filename, fproduct);
  return 0;
}

//Afficher tous les utilisateurs//Admin
void displayAllUsers(){
  char *fname = malloc(sizeof(char)*200);
  DIR *d;
  printf("\nVoici la liste des comptes utilisateurs enregistrés:\n");
    struct dirent *dir;
    d = opendir(".");
    if (d)
    {
        while ((dir = readdir(d)) != NULL) //Tant qu'il reste des fichiers non vérif
        {
          strcpy(fname,dir->d_name);
            for(int i=0;i<fname[i]!='\0';i++){
            if (t_email[i] == '@'){
              printf("\n\t%s\n",fname);
            }
            }
          }
        }
        closedir(d);
  EspaceAdmin();
    }

//Admin
int modifUsers(){
FILE *file, *temp;
int choix;
  char filename[FILENAME_SIZE];
  char temp_filename[FILENAME_SIZE];

  char buffer[MAX_LINE];
  char replace[MAX_LINE];
  int replace_line = 0;
fflush(stdin);
  printf("\nQuel utilisateur voulez modifier(format .txt):\n");
  scanf("%s", filename);
  

  strcpy(temp_filename, "temp");
  strcat(temp_filename, filename);

  fflush(stdin);
  printf("\nQue voulez vous changer:\n1.Nom de l'utilisateur\n2.Prenom de l'utilisateur\n3.Age de l'utilisateur\n"); 
  scanf("%d",&choix);
      while(choix<1 || choix>3){
        fflush(stdin);
      printf("\nVeuillez faire un choix correcte\n");
      printf("\nQue voulez vous changer:\n1.Nom du Produit\n2.Prix du Produit\n3.Quantité\n"); 
      scanf("%d",&choix);
    }
  if(choix==1){
    replace_line=1;
  }else if(choix==2){
    replace_line=2;
  }else if(choix==3){
    replace_line=3;
  }
  else{
printf("\nErreur!\n");
    return -1;
  }

  fflush(stdin);
  printf("Remplacement du texte:\n");
  scanf("%s", replace);

  file = fopen(filename, "r");
  if (file == NULL) {
        printf("\nErreur lors de l'ouverture du fichier.\n");
      printf("\nFichier manquant\n");
        return -1;
    }  
  temp = fopen(temp_filename, "w");

  bool keep_reading = true;
  int current_line = 1;
  do {
    fgets(buffer, MAX_LINE, file);
    if (feof(file)) {
      keep_reading = false;
    } else if (current_line == replace_line) {
      fputs(replace, temp);
      fputc('\n', temp); // Ajout du caractère de fin de ligne
    } else {
      fputs(buffer, temp);
    }
    current_line++;
  } while (keep_reading);

  fclose(file);
  fclose(temp);
  remove(filename);
  rename(temp_filename, filename);
  EspaceAdmin();
  return 0;
}
//Interface Manage Client//admin
void manageUsers(){
  system("clear");
  int ch;
  int back=0;
  while(1){

    printf("\n\n\t=================Mode Management Client=================\n\n");
    printf("1.Modifier Informations Client\n\n");
    printf("2.Afficher la liste des Clients\n\n");
    printf("0.Retour\n\n");
    printf("\n\n\t======================================================\n\n");
    printf("\nEntrer votre choix:\n");
    scanf("%d",&ch);

    switch(ch){
      case 1: modifUsers();
      break;
      case 2: displayAllUsers();
      break;
      case 0: 
        EspaceAdmin();
      break;
      default :
      printf("\nVeuillez renter un choix valide\n");
      break;
    }
  }
}

//Interface Client

int modifMesInfos(){
  int MAX_LENGTH=30;
    char nom[MAX_LENGTH];
    char prenom[MAX_LENGTH];
    char age[MAX_LENGTH];
  char email1[MAX_LENGTH];

  FILE *fc=fopen(email, "r");
  system("clear");
  fflush(stdin);
  printf("\nVoici Vos Informations Clients:\n");
  while (fscanf(fc, "%s", nom) == 1) {
        fscanf(fc, " %[^\n]", prenom);
        fscanf(fc, "%s", age);
        fscanf(fc, "%s", email1);
        
        printf("\nNom: %s\tPrenom: %s\tAge: %s\tEmail: %s\n", nom, prenom, age, email);
    }
  
FILE *file, *temp;
int choix;
  char filename[FILENAME_SIZE];
  char temp_filename[FILENAME_SIZE];

  char buffer[MAX_LINE];
  char replace[MAX_LINE];
  int replace_line = 0;

  strcpy(filename, email);

  strcpy(temp_filename, "temp");
  strcat(temp_filename, filename);

  fflush(stdin);
  printf("\nQue voulez vous changer:\n1.Nom\n2.Prenom\n3.Age\n4.Mot de Passe\n"); 
  scanf("%d",&choix);
      while(choix<1 || choix>4){
        fflush(stdin);
      printf("\nVeuillez faire un choix correcte\n");
      printf("\nQue voulez vous changer:\n1.Nom\n2.Prenom\n3.Age\n4.Mot de Passe\n");  
      scanf("%d",&choix);
    }
  if(choix==1){
    replace_line=1;
  }else if(choix==2){
    replace_line=2;
  }else if(choix==3){
    replace_line=3;
  }else if(choix==4){
    replace_line=4;
  }
  else{
printf("\nErreur!\n");
    return -1;
  }

  fflush(stdin);
  printf("Remplacement du texte:\n");
  scanf("%s", replace);

  file = fopen(filename, "r");
  if (file == NULL) {
        printf("\nErreur lors de l'ouverture du fichier.\n");
      printf("\nFichier manquant\n");
        return -1;
    }  
  temp = fopen(temp_filename, "w");

  bool keep_reading = true;
  int current_line = 1;
  do {
    fgets(buffer, MAX_LINE, file);
    if (feof(file)) {
      keep_reading = false;
    } else if (current_line == replace_line) {
      fputs(replace, temp);
      fputc('\n', temp); // Ajout du caractère de fin de ligne
    } else {
      fputs(buffer, temp);
    }
    current_line++;
  } while (keep_reading);

  fclose(file);
  fclose(temp);
  remove(filename);
  rename(temp_filename, filename);
  EspaceClient();
  return 0;
}
void EspaceClient(){
  int ch;
      printf("\n\n\t=================CY-SHOP=================\n\n");
    printf("\t==========Bienvenu dans votre espace Client=============\n\n");

    printf("1.Modifier vos informations Clients\n\n");
    printf("2.Voir nos Produits\n\n");
    printf("3.Votre Panier\n\n");
    printf("4.Votre Historique\n\n");
    printf("0.Exit\n\n");
printf("\n\n\t=================================================\n\n");
    printf("\nVeuillez entrer votre choix:\n");
    scanf("%d",&ch);
switch(ch){
  case 1: modifMesInfos();
  break;
  case 2: 
  break;
  case 3:
  break;
  case 4 :
  break;
  case 0: 
  DefaultScreen();
  default:
  GestionMode();
  break;

}
}
void EspaceAdmin(){
  int ch;
  printf("\n\n\t=================CY-SHOP=================\n\n");
printf("\t==============MODE : GESTION=============\n\n");

    printf("1.Gérer les produits\n\n");
    printf("2.Gérer les Utilisateurs\n\n");
    printf("0.Exit\n\n");
printf("\n\n\t==========================================\n\n");
    printf("\nVeuillez entrer votre choix:\n");
    scanf("%d",&ch);
switch(ch){
  case 1: manageProduct();
  break;
  case 2: manageUsers();
  break;
  case 0: 
  DefaultScreen();
  default:
  printf("Erreur");
  break;

}
}
//Interface gestion
void GestionMode(){
int ch;
int logres=login();
if(logres==3){
  signup();
}
  else if(logres==2){
 //faire un while login() == 2 pour admin -> Manage + Voir les clients + leurs infos.

EspaceAdmin();
}
  else if(f==1){
  EspaceClient();
  }
}

//Main
int DefaultScreen(){
  system("clear");
  int choice;
printf("\n\n\t=================Bienvenu dans CY-SHOP=================\n");
printf("\t================La Mode à portée de Main=================\n\n");
        printf("\n\n1.Inscription");
        printf("\n2.Connexion");
        printf("\n3.Quitter");
  
        // Asking for choice
        printf("\n\n\nEntrer votre choix : ");
        scanf("%d", &choice);
  
  

        switch (choice) {
        case 1: {
            signup();
            break;
        }
        case 2: {
            
            GestionMode();
            break;
        }
        case 3: {

     printf("\n\n\t=================Merci pour votre visite=================\n\n");
            exit(0);
        }
        default: {
  
            printf("\n\nEntrer un choix valide!!\n");
            break;
        }
        }
 }

int main()
{

    while (1) {
  
     DefaultScreen();
    }

  return 0;
}
