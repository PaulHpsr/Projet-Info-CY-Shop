#include <math.h>
#include <stdio.h>
#include <string.h>
#include <time.h>
#include <stdlib.h> 
#include<dirent.h>
#include "ReadSpecificLine.h"
#include "ReadSpecificLine2.h"

#define TAILLE_MAX 100
#define MAX_LENGTH 100

typedef struct {
int pid;
char pname[20];
int pprice;

}Bill;

typedef struct {
    char name[20];
    char prenom[30];
    int age;
    char password[100];
    char email[100];
    Bill bill;
}Client;

typedef struct{
int id;
char name[20];
int price;
int qty;
}Product;

//Admin
char admin[7] = "@admin.";
char adminp[10] = "TeamBurger";
//Signup
int ch;
int choice,x, confirm;
char t_name[100], t_password1[100];
char t_password2[100], t_email[100];
char t_prenom[100];
int t_age;
int i, j=0, count =0, i, flag=1, sucess=0;
//Signup Declaration
void signup();
void account_validate();
int validate();
int login();
//Manage Declaration
int getID();
int billFileNo();
void manageProduct();
void purchaseProduct();
void generateBill();
void addProduct();
void displayAllProduct();
int findProduct();
int updateProduct();

char fproduct[]={"product.txt"};
char fbill[]={"bill.txt"};
int total =0;
//


// Signup function declared
void signup()
{
  
    printf("\n\n\t******************"
           "Welcome to Signup "
           "Page****************"
           "*\n\n");
  
    // Taking name as input
    printf("\tEnter Your name : ");
    scanf("%s", t_name);
  
      printf("\tEnter Your prenom : ");
    scanf("%s", t_prenom);
    // Taking email as input
    printf("\tEnter Your Email : ");
    scanf("%s", t_email);
  
    // Taking password as input
    printf("\tEnter Password : ");
    scanf("%s", t_password1);
  
    // Taking Confirm Password as input
    printf("\tConfirm Password : ");
    scanf("%s", t_password2);
  
    // Taking Age as input
    printf("\tEnter Your Age : ");
    scanf("%d", &t_age);
  
    x = validate();
    if (x == 1) {
  
        // Calling account_validate to check
        // if entered details follows the defined
        // rules
        account_validate();
  
        // login function appears
        login();
    }
}

// Signup process
int validate(){
  //Nom
  for(i=0; t_name[i]!= '\0';i++){
    if(!((t_name[i] >= 'a' && t_name[i] <= 'z') || (t_name[i] >= 'A' && t_name[i] <= 'Z'))) {
                  printf("\nPlease enter the valid Name!\n");
            flag = 0;
            break;
    }
  }
  //Prenom
    for(i=0; t_prenom[i]!= '\0';i++){
    if(!((t_prenom[i] >= 'a' && t_prenom[i] <= 'z') || (t_prenom[i] >= 'A' && t_prenom[i] <= 'Z'))) {
                  printf("\nPlease enter the valid Name!\n");
            flag = 0;
            break;
    }
  }
  //Other
  if(flag==1){
    count =0;
    //Email ID
    for(i=0;t_email[i]!='\0';i++){
                  if (t_email[i] == '@' || t_email[i] == '.'){ 
                count++;
        }

    }
    //Password and Age
    if(count>=2){
      if (!strcmp(t_password1, t_password2)) {
        if (t_age != 0 && t_age > 0) {
        sucess=1;
          
      }
        else{
            printf("\n\nPlease Enter the valid age\n\n");
          return 0;
        }
    }
      else{
        printf("\nPassword Mismatch\n\n");
        return 0;
      }
  }
  else {
  printf("\nPlease Enter Valid E-Mail\n\n");
  return 0;
        }
 }
  return sucess;
}

int compte_existant(){
  char *fname = malloc(sizeof(char)*200);
 strcpy(fname, t_email);
strcat(fname,".txt");
    DIR *d;
    struct dirent *dir;
    d = opendir(".");
    if (d)
    {
        while ((dir = readdir(d)) != NULL)
        {
          if(!(strcmp(dir->d_name, fname))){
            printf("Compte existant, veuillez vous connecter\n\n");
            free(fname);
            return 0;
          }
        }
        closedir(d);
    }
  return 1;
}

void account_validate()
{
  FILE *fc;
  Client client;
  int validate=0;
  //
char *fname = malloc(sizeof(char)*200);
 strcpy(fname, t_email);
strcat(fname,".txt");
  
 //
  if(compte_existant() == 1){
    
fc=fopen(fname,"a");
strcpy(client.name,t_name);
strcpy(client.email,t_email);
strcpy(client.prenom,t_prenom);
client.age=t_age;
strcpy(client.password,t_password1);
    //dans le fichier
fprintf(fc,"Nom: %s\nPrenom: %s\nAge: %d\n%s\nEmail: %s",client.name,client.prenom,client.age,client.password,client.email);
  fclose(fc);
  printf("Compte bien créé\n\n");
  }
  free(fname);
 }

//Login / Admin compte
int login()
{
  int a;
  FILE *fc;
  char *email = malloc(sizeof(char)*50);
   char email2[5]=".txt"; 
  char pasword[30];
  char pasword2[30];
    printf("\n\n\t******************"
           "Welcome to Login "
           "Page********************"
           "****\n\n");
    printf("\n\nLOGIN\n\n");
    printf("\t Entrez votre  Email: ");
  
    // Askinf for email
    scanf("%s", email);
    printf("\t Entrez votre Mot de Passe: ");
  
    // Asking for your Password
    scanf("%s", pasword2);
  strcat(email,email2);
  
  fc=fopen(email,"r");
  if(fc==NULL){
        printf("\nAAZAZAZ\n");
    a= -1;
  }
  strcpy(pasword, ReadLine(4, email));
  printf("%s\n",pasword);
  printf("%s\n",pasword2);
  
  if(strcmp(pasword, pasword2)== 0){
    printf("\nVous êtes bien connecté\n");
    a= 1;
  }
    else if(email == admin){
      if(!(strcmp(pasword2, adminp))){
        a= 2;
      }
    }
  else{
    printf("\nMauvais Mot de passe ou adresse email\nVeuillez vous créer un compte\n");
    a= -1;
  }
  free(email);
  return a;
}

//Manage
void manageProduct(){
  int ch;
  int back=0;
  while(1){

    printf("============\n\n");
    printf("\t\t Welcome Management\n\n");
    printf("================\n\n");
    printf("1.Add\n\n");
    printf("2.Display\n\n");
    printf("3.Modif les stocks\n\n");
    printf("0.Back\n\n");
    printf("==============\n\n");
    printf("\nPlease enter your Choice:");
    scanf("%d",&ch);

    switch(ch){
      case 1: addProduct();
      break;
      case 2: displayAllProduct();
      break;
      case 3: updateProduct();
      break;
      case 0: 
      break;
      default :
      printf("veuillez renter un choix valide");
      break;
    }
  }
}

void displayAllProduct(){
    FILE* fichier = fopen(fproduct, "r");
    
    if (fichier == NULL) {
        printf("Erreur lors de l'ouverture du fichier.\n");
        return;
    }
    
    char id[MAX_LENGTH];
    char nom[MAX_LENGTH];
    char prix[MAX_LENGTH];
    char quantite[MAX_LENGTH];
    
    while (fscanf(fichier, "%s", id) == 1) {
        fscanf(fichier, " %[^\n]", nom);
        fscanf(fichier, "%s", prix);
        fscanf(fichier, "%s", quantite);
        
        printf("%s\t%s\t%s\t%s\n", id, nom, prix, quantite);
    }
    
    fclose(fichier);
}
  
void addProduct(){
  FILE *fp;
  Product t1;
  fp=fopen(fproduct,"a");

  t1.id=getID();
  printf("\nEnter product name:");
  scanf("%s",t1.name);
  printf("\nEnter propduct price:");
  scanf("%d",&t1.price);
  printf("\nEnter product qty:");
  scanf("%d",&t1.qty);

  fprintf(fp,"%d\n%s\n%d\n%d\n", t1.id,t1.name,t1.price,t1.qty);
  fclose(fp);
}

int getID(){
  FILE *fp;
  int value=0;
  fp=fopen("prodid.txt","r");
  if(fp==NULL){
    fp=fopen("prodid.txt","w");
    fprintf(fp,"%d",0);
    fclose(fp);
    fp=fopen("prodid.txt","r");
  }
  fscanf(fp,"%d",&value);
  fclose(fp);
  fp=fopen("prodid.txt","w");
  fprintf(fp,"%d",value+1);
  fclose(fp);
  return value+1;
}



int updateProduct() {
int id;
int chmodif;
int modif;
FILE *file, *temp;
  char filename[FILENAME_SIZE];
  char temp_filename[FILENAME_SIZE];

  char buffer[MAX_LINE];
  char replace[MAX_LINE];
  int replace_line = 0;
printf("ID: \n");
scanf("%d",&id);

printf("\n1.PRIX\n2.QTY\n");
scanf("%d",&chmodif);
if(chmodif ==1){
  modif=3;
}
  else if(chmodif == 2){
    modif =4;
  }
  else{
    printf("Erreur");
   return -1; 
  }
replace_line=id*modif; 
printf("Nouvelle valeur:\n");
scanf("%s",replace);
file = fopen(fproduct,"r");
temp = fopen("temp.txt","w");

if(file == NULL || temp == NULL){
  printf("Erreur");
  return -1;
}
  bool keep_reading = true;
  int current_line = 1;
  do{
    fgets(buffer,MAX_LINE,file);

    if(feof(file)){
      keep_reading =false;
    }
    else if(current_line == replace_line){
      fputs(replace,temp);
    }
    else{
      fputs(buffer, temp);
    }
  }while(keep_reading);
  fclose(file);
  fclose(temp);
  remove("product.txt");
  rename("temp.txt", "product.txt");
  
}

int findProduct(){
int nprod;
Product produit;
FILE *fp;
fp =fopen("prodid.txt","r");
fscanf(fp, "%d", &nprod);
fclose(fp);
return nprod;
}

int GestionMode(){


  while(login()==1){ //faire un while login() == 2 pour admin -> Manage + Voir les clients + leurs infos.

    printf("=========================\n\n");
    printf("\t\t Bie'nvenu CY-SHOP\n\n");
        printf("=========================\n\n");

    printf("1.Manage Product\n\n");
    printf("2.Purchase Product\n\n");
    printf("3.Generate Bill\n\n");
    printf("0.Exit\n\n");
    printf("=========================\n\n");
    printf("\nPlease enter your Choice:");
    scanf("%d",&ch);
switch(ch){
  case 1: manageProduct();
  break;
  case 2: 
  break;
  case 3: 
  break;
  case 0: 
  exit(0);
  default:
  printf("Erreur");
  break;
  
}
}
}

int main()
{
  FILE *fp;
    // Loop while till which runs till break is called
    while (1) {
  
        // First Page
    printf("=========================\n\n");
    printf("\t\t Bienvenu CY-SHOP\n\n");
        printf("=========================\n\n");
        printf("\n\n1)SIGNUP");
        printf("\n2)LOGIN");
        printf("\n3)EXIT");
  
        // Asking for choice
        printf("\n\n\nEnter your choice : ");
        scanf("%d", &choice);
  
  
        // Switch used to check the input
        // choice
        switch (choice) {
        case 1: {
            // Signup function called
            signup();
            break;
        }
        case 2: {
            // Login function called
            GestionMode();
            break;
        }
        case 3: {
            printf(
                "\n\t*************************Thank you "
                "Visit Again***********************\n\n");
  
            // close the program
            return 0;
        }
        default: {
  
            // Choice entered is not correct
            printf("\n\nPlease enter valid choice!!\n");
            break;
        }
        }
    }

  return 0;
}

